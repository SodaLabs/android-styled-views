import static se.bjurr.gitchangelog.api.GitChangelogApi.gitChangelogApiBuilder
import static se.bjurr.gitchangelog.api.GitChangelogApiConstants.REF_MASTER

buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'co.riiid:gradle-github-plugin:0.4.2'
        classpath 'gradle.plugin.se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.56'
    }
}

// Release our assets to Github
apply plugin: 'co.riiid.gradle'
apply plugin: 'se.bjurr.gitchangelog.git-changelog-gradle-plugin'

if (System.getenv("CI")) {
    def artifact_version = project.styled_recycler_view_artifact_version
    def artifact_name = project.styled_recycler_view_artifact_name

    def log = gitChangelogApiBuilder()
        .withGitHubToken(System.getenv('GITHUB_API_KEY'))
        .withFromRef('git describe --abbrev=0 --tags'.execute().text.trim())
        .withToRef(REF_MASTER)
        .withTemplatePath("releasenotes.mustache")
        .withUntaggedName("Styled-Recycler-View Ver. ${artifact_version}")
        .withNoIssueName("Other issues")
        .render()

    github {
        owner = 'SodaLabs'
        repo = 'styled-views-android'
        token = System.getenv('GITHUB_API_KEY')
        tagName = "${artifact_name}-v${artifact_version}"
        targetCommitish = 'master'
        name = "Styled-Recycler-View Ver. ${artifact_version}"
        body = log
    }
}

project.ext {
    buildVersionCode = { version ->
        def majorMinorBuild = version.tokenize(".")
        def vCode = 0
        def powerOfTen = 1
        def multiplier = 1000
        def baseVersionCode = multiplier**Math.max(majorMinorBuild.size() - 1, 0)
        majorMinorBuild.reverse().eachWithIndex() { obj, i -> (vCode += (obj.toInteger() * powerOfTen)); powerOfTen *= multiplier }

        logger.info("Build version code [" + vCode + "] from version name [" + version + "].")

        if (vCode < baseVersionCode) {
            return vCode + baseVersionCode
        } else {
            return vCode
        }
    }
}
